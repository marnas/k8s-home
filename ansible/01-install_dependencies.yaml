# https://kubernetes.io/blog/2019/03/15/kubernetes-setup-using-ansible-and-vagrant/

- hosts: all
  become: true
  remote_user: ubuntu

  vars_files:
    - 00-ansible_vars.yaml

  tasks:
  - name: Creating modules file
    copy:
      dest: "/etc/modules-load.d/k8s.conf"
      content: |
        overlay
        br_netfilter

  - name: Creating modules file
    copy:
      dest: "/etc/modules-load.d/crio.conf"
      content: |
        overlay
        br_netfilter

  - name: Setting sysctl params
    copy:
      dest: "/etc/sysctl.d/k8s.conf"
      content: |
        net.bridge.bridge-nf-call-iptables  = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        net.ipv4.ip_forward                 = 1

  - name: Setting sysctl params
    copy:
      dest: "/etc/sysctl.d/99-kubernetes-cri.conf"
      content: |
        net.bridge.bridge-nf-call-iptables  = 1
        net.ipv4.ip_forward                 = 1
        net.bridge.bridge-nf-call-ip6tables = 1

  # Kubelet will not start if the system has swap enabled
  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb >= 0

  - name: Add an Apt signing key (1/2)
    apt_key:
      url: "https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:{{ crio_version }}/{{ os }}/Release.key"
      state: present

  - name: Add an Apt signing key (2/2)
    apt_key:
      url: "https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/{{ os }}/Release.key"
      state: present

  - name: Add cri-o repositories (1/2)
    apt_repository:
      repo: "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/{{ os }}/ /"
      filename: devel:kubic:libcontainers:stable

  - name: Add cri-o repositories (2/2)
    apt_repository:
      repo: "deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/{{ crio_version }}/{{ os }}/ /"
      filename: devel:kubic:libcontainers:stable:cri-o:{{ crio_version }}

  - name: Install crio and packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - cri-o
      - cri-o-runc
      - cri-tools
      
  - name: Verify crio installed, enabled, and started
    service:
      name: crio
      state: started
      enabled: yes
      daemon_reload: yes
          
  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        # it is usually recommended to specify which version you want to install
        - kubelet
        - kubeadm 
        - kubectl
        
  - name: Hold kubernetes binary versions (prevent from being updated)
    dpkg_selections:
      name: "{{ item }}"
      selection: hold
    loop:
      - kubelet
      - kubeadm
      - kubectl
  
  - name: Reboot system
    reboot:
      reboot_timeout: 180 #allow 3 minutes for reboot to happen